/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Cau_2_HuongDanChung;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author trant
 */
public class SanPhamGUI extends javax.swing.JFrame {

    /**
     * Creates new form QLSP_GUI
     */
    
    
    public SanPhamGUI() {
        initComponents();
        setTitle("San Pham");
        updateTable();
        tb_info.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            // Lấy chỉ số của hàng được click
            int selectedRow = tb_info.getSelectedRow();
            // Kiểm tra nếu chỉ số hàng được chọn hợp lệ
            if (selectedRow != -1) {
                // Lấy giá trị từ bảng và hiển thị trên các JTextField
                txt_masp.setText(tb_info.getValueAt(selectedRow, 0).toString());
                txt_tensp.setText(tb_info.getValueAt(selectedRow, 1).toString());
                txt_gia.setText(tb_info.getValueAt(selectedRow, 2).toString());
            }
        }
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb_masp = new javax.swing.JLabel();
        lb_tensp = new javax.swing.JLabel();
        lb_gia = new javax.swing.JLabel();
        txt_tensp = new javax.swing.JTextField();
        txt_masp = new javax.swing.JTextField();
        txt_gia = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_info = new javax.swing.JTable();
        btn_them = new javax.swing.JButton();
        btn_xoa = new javax.swing.JButton();
        btn_sua = new javax.swing.JButton();
        btn_thoat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lb_masp.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lb_masp.setText("Mã Sản Phẩm");

        lb_tensp.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lb_tensp.setText("Tên Sản Phẩm");

        lb_gia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lb_gia.setText("Giá");

        tb_info.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tb_info.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Giá"
            }
        ));
        jScrollPane1.setViewportView(tb_info);

        btn_them.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_them.setText("Thêm");
        btn_them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themActionPerformed(evt);
            }
        });

        btn_xoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_xoa.setText("Xóa");
        btn_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaActionPerformed(evt);
            }
        });

        btn_sua.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_sua.setText("Sửa");
        btn_sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaActionPerformed(evt);
            }
        });

        btn_thoat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_thoat.setText("Thoát");
        btn_thoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_thoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(btn_them, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_sua, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_thoat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_masp)
                            .addComponent(lb_gia)
                            .addComponent(lb_tensp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_tensp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                            .addComponent(txt_masp, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_gia))
                        .addGap(4, 4, 4)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_masp)
                    .addComponent(txt_masp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_tensp)
                    .addComponent(txt_tensp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_gia)
                    .addComponent(txt_gia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_them, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_sua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_thoat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themActionPerformed
        String masp = txt_masp.getText();
        String tensp = txt_tensp.getText();
        String s_gia = txt_gia.getText();
        
        if (masp.equals("") || tensp.equals("") || s_gia.equals("")) {
            JOptionPane.showMessageDialog(this, "Thông tin không được để trống!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (Integer.parseInt(s_gia) <= 0) {
            JOptionPane.showMessageDialog(this, "Giá không được nhỏ hơn 0!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int gia = Integer.parseInt(s_gia);
            
            SanPhamDTO sp = new SanPhamDTO(masp, tensp, gia);
            SanPhamBUS bus = new SanPhamBUS();
            
            if (bus.addSanPham(sp)) {
                JOptionPane.showMessageDialog(this, "Đã thêm thành công!");
                clearSP();
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            
        }
        updateTable();
    }//GEN-LAST:event_btn_themActionPerformed

    private void btn_thoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_thoatActionPerformed
        int luaChon = JOptionPane.showConfirmDialog(
				this, 
				"Bạn có muốn thoát khỏi chương trình?",
				"Exit",
				JOptionPane.YES_NO_OPTION);
            if (luaChon == JOptionPane.YES_OPTION) {
                    System.exit(0);
            }
    }//GEN-LAST:event_btn_thoatActionPerformed

    private void btn_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaActionPerformed
        int luaChon = JOptionPane.showConfirmDialog(
				this, 
				"Bạn có muốn xóa dữ liệu?",
				"Exit",
				JOptionPane.YES_NO_OPTION);
            if (luaChon == JOptionPane.YES_OPTION) {
                    String masp = txt_masp.getText();
                    String tensp = txt_tensp.getText();
                    String s_gia = txt_gia.getText();

                    if (txt_masp.getText().isEmpty()) return;
                    int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa không?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);

                    if (confirm == JOptionPane.YES_OPTION) {
                        try {
                            int gia = Integer.parseInt(s_gia);
                            SanPhamDTO sp = new SanPhamDTO(masp, tensp, gia);
                            SanPhamBUS bus = new SanPhamBUS();

                            if (bus.deleteSanPham(sp)) {
                                JOptionPane.showMessageDialog(this, "Xóa thành công!");
                                clearSP();
                            } 
                        } catch (SQLException e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this, "Lỗi khi xóa sản phẩm: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    updateTable();
            }
    }//GEN-LAST:event_btn_xoaActionPerformed

    private void btn_suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaActionPerformed
        int luaChon = JOptionPane.showConfirmDialog(
				this, 
				"Bạn có muốn sửa dữ liệu?",
				"Exit",
				JOptionPane.YES_NO_OPTION);
            if (luaChon == JOptionPane.YES_OPTION) {
                String masp = txt_masp.getText();
                String tensp = txt_tensp.getText();
                String s_gia = txt_gia.getText();

                if (masp.equals("") || tensp.equals("") || s_gia.equals("")) {
                    JOptionPane.showMessageDialog(this, "Thông tin không được để trống!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (Integer.parseInt(s_gia) <= 0) {
                    JOptionPane.showMessageDialog(this, "Giá không được nhỏ hơn 0!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                try {
                    int gia = Integer.parseInt(s_gia);

                    SanPhamDTO sp = new SanPhamDTO(masp, tensp, gia);
                    SanPhamBUS bus = new SanPhamBUS();

                    if (bus.updateSanPham(sp)) {
                        JOptionPane.showMessageDialog(this, "Đã sửa thành công!");
                        clearSP();
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
                updateTable();
            }
    }//GEN-LAST:event_btn_suaActionPerformed

    public void clearSP(){
        txt_masp.setText("");
        txt_tensp.setText("");
        txt_gia.setText("");
    }
    
    public void updateTable(){
        DefaultTableModel tblModelTT = (DefaultTableModel) tb_info.getModel();
        tblModelTT.setRowCount(0);
        Connection con = OracleConnection.getInstance().getConnection();
        try {
            String row[] = new String[3];
            String sql = "SELECT * FROM SANPHAM";
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery(sql);
            while (rs.next()) {
                row[0] = rs.getString(1);
                row[1] = rs.getString(2);
                row[2] = rs.getString(3);
                tblModelTT.addRow(row);
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SanPhamGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SanPhamGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SanPhamGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SanPhamGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SanPhamGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_sua;
    private javax.swing.JButton btn_them;
    private javax.swing.JButton btn_thoat;
    private javax.swing.JButton btn_xoa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_gia;
    private javax.swing.JLabel lb_masp;
    private javax.swing.JLabel lb_tensp;
    private javax.swing.JTable tb_info;
    private javax.swing.JTextField txt_gia;
    private javax.swing.JTextField txt_masp;
    private javax.swing.JTextField txt_tensp;
    // End of variables declaration//GEN-END:variables
}
